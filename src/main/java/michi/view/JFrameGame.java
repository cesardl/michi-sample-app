/*
 * JFrameGame.java
 *
 * Created on 20/07/2009, 01:18:48 PM
 */
package michi.view;

import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import michi.controller.GameController;

/**
 *
 * @author cesar.diaz
 */
public class JFrameGame extends javax.swing.JFrame {

    private final GameController controller = GameController.getInstance();

    /**
     * Creates new form JFrameMain
     */
    public JFrameGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new ButtonGroup();
        panel = new JPanel();
        button00 = new JButton();
        button01 = new JButton();
        button02 = new JButton();
        button10 = new JButton();
        button11 = new JButton();
        button12 = new JButton();
        button20 = new JButton();
        button21 = new JButton();
        button22 = new JButton();
        labelStatus = new JLabel();
        menuBar = new JMenuBar();
        menuGame = new JMenu();
        menuItemNew = new JMenuItem();
        menuPlayer = new JMenu();
        radioButtonMenuItemX = new JRadioButtonMenuItem();
        radioButtonMenuItemO = new JRadioButtonMenuItem();
        separator = new JPopupMenu.Separator();
        menuItemExit = new JMenuItem();
        menuHelp = new JMenu();
        menuItemAbout = new JMenuItem();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        bundle = ResourceBundle.getBundle("michi/view/Bundle"); // NOI18N
        setTitle(bundle.getString("app.title")); // NOI18N

        panel.setBorder(BorderFactory.createEtchedBorder());
        panel.setLayout(new GridLayout(3, 3));

        button00.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button00.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button00);

        button01.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button01.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button01);

        button02.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button02.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button02);

        button10.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button10.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button10);

        button11.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button11.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button11);

        button12.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button12.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button12);

        button20.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button20.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button20);

        button21.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button21.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button21);

        button22.setFont(new Font("Dialog", 1, 18)); // NOI18N
        button22.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        panel.add(button22);

        labelStatus.setText(bundle.getString("dict.welcome")); // NOI18N

        menuGame.setText(bundle.getString("dict.game")); // NOI18N

        menuItemNew.setText(bundle.getString("dict.new")); // NOI18N
        menuItemNew.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemNewActionPerformed(evt);
            }
        });
        menuGame.add(menuItemNew);

        menuPlayer.setText(bundle.getString("dict.player")); // NOI18N

        buttonGroup.add(radioButtonMenuItemX);
        radioButtonMenuItemX.setSelected(true);
        radioButtonMenuItemX.setText(bundle.getString("dict.x")); // NOI18N
        menuPlayer.add(radioButtonMenuItemX);

        buttonGroup.add(radioButtonMenuItemO);
        radioButtonMenuItemO.setText(bundle.getString("dict.o")); // NOI18N
        menuPlayer.add(radioButtonMenuItemO);

        menuGame.add(menuPlayer);
        menuGame.add(separator);

        menuItemExit.setText(bundle.getString("dict.exit")); // NOI18N
        menuGame.add(menuItemExit);

        menuBar.add(menuGame);

        menuHelp.setText(bundle.getString("dict.help")); // NOI18N

        menuItemAbout.setText(bundle.getString("dict.about")); // NOI18N
        menuHelp.add(menuItemAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addComponent(labelStatus, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelStatus, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemNewActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemNewActionPerformed
        controller.restart();

        labelStatus.setText(bundle.getString("dict.welcome"));
    }//GEN-LAST:event_menuItemNewActionPerformed

    private void buttonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        JButton btn = (JButton) evt.getSource();
        btn.setText(controller.getCurrentPlayer().name());
        btn.setEnabled(false);

        if (evt.getSource().equals(button00)) {
            controller.markBox(0, 0);
        }
        if (evt.getSource().equals(button01)) {
            controller.markBox(0, 1);
        }
        if (evt.getSource().equals(button02)) {
            controller.markBox(0, 2);
        }
        if (evt.getSource().equals(button10)) {
            controller.markBox(1, 0);
        }
        if (evt.getSource().equals(button11)) {
            controller.markBox(1, 1);
        }
        if (evt.getSource().equals(button12)) {
            controller.markBox(1, 2);
        }
        if (evt.getSource().equals(button20)) {
            controller.markBox(2, 0);
        }
        if (evt.getSource().equals(button21)) {
            controller.markBox(2, 1);
        }
        if (evt.getSource().equals(button22)) {
            controller.markBox(2, 2);
        }

        // TODO texto de status
        StringBuilder builder = new StringBuilder(bundle.getString("app.turn"));
        builder.append(controller.getCurrentPlayer());

        labelStatus.setText(new String(builder));
//        if (ganador() && v == 1) {
//            JOptionPane.showMessageDialog(this, "Ganador: " + s, getTitle(), JOptionPane.INFORMATION_MESSAGE);
//            modificarPanel(0);
//        } else if (counter == 9) {
//            JOptionPane.showMessageDialog(this, "No hay Ganador", getTitle(), JOptionPane.WARNING_MESSAGE);
//        }
    }//GEN-LAST:event_buttonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton button00;
    private JButton button01;
    private JButton button02;
    private JButton button10;
    private JButton button11;
    private JButton button12;
    private JButton button20;
    private JButton button21;
    private JButton button22;
    private ButtonGroup buttonGroup;
    private JLabel labelStatus;
    private JMenuBar menuBar;
    private JMenu menuGame;
    private JMenu menuHelp;
    private JMenuItem menuItemAbout;
    private JMenuItem menuItemExit;
    private JMenuItem menuItemNew;
    private JMenu menuPlayer;
    private JPanel panel;
    private JRadioButtonMenuItem radioButtonMenuItemO;
    private JRadioButtonMenuItem radioButtonMenuItemX;
    private JPopupMenu.Separator separator;
    private ResourceBundle bundle;
    // End of variables declaration//GEN-END:variables
}
